
-- ===============================================
-- 2️⃣ 테이블 삭제 (CASCADE 제약조건)
-- ===============================================
DROP TABLE TB_FILE_DB_LIKES CASCADE CONSTRAINTS;
DROP TABLE TB_GALLERY_LIKES CASCADE CONSTRAINTS;
DROP TABLE TB_FREE_BOARD CASCADE CONSTRAINTS;
DROP TABLE TB_NEWS_BOARD CASCADE CONSTRAINTS;
DROP TABLE TB_RESERVATION CASCADE CONSTRAINTS;
DROP TABLE TB_BOOKING CASCADE CONSTRAINTS;

DROP TABLE TB_FILE_DB CASCADE CONSTRAINTS;
DROP TABLE TB_GALLERY CASCADE CONSTRAINTS;
DROP TABLE TB_MEETING_ROOM CASCADE CONSTRAINTS;
DROP TABLE TB_PUBLIC_CAR CASCADE CONSTRAINTS;

DROP TABLE TB_MEMBER CASCADE CONSTRAINTS;
DROP TABLE TB_EMP CASCADE CONSTRAINTS;
DROP TABLE TB_DEPT CASCADE CONSTRAINTS;

DROP TABLE TB_FAQ CASCADE CONSTRAINTS;
DROP TABLE TB_QNA CASCADE CONSTRAINTS;
DROP TABLE TB_NOTICE CASCADE CONSTRAINTS;
DROP TABLE TB_EVENT_NOTICE CASCADE CONSTRAINTS;

DROP TABLE TB_DOCUMENT CASCADE CONSTRAINTS;
DROP TABLE TB_APPROVAL CASCADE CONSTRAINTS;

-- ===============================================
-- 3️⃣ 도메인 테이블 생성
-- ===============================================

-- Departments
CREATE TABLE TB_DEPT (
                         DNO NUMBER GENERATED BY DEFAULT AS IDENTITY(START WITH 10 INCREMENT BY 10) PRIMARY KEY,
                         DNAME VARCHAR2(255),
                         LOC VARCHAR2(255),
                         INSERT_TIME TIMESTAMP,
                         UPDATE_TIME TIMESTAMP
);

-- Employees
CREATE TABLE TB_EMP (
                        ENO NUMBER GENERATED BY DEFAULT AS IDENTITY(START WITH 8000 INCREMENT BY 1)  PRIMARY KEY,
                        ENAME VARCHAR2(255),
                        JOB VARCHAR2(255),
                        MANAGER NUMBER,
                        HIREDATE TIMESTAMP,
                        SALARY NUMBER,
                        COMMISSION NUMBER,
                        DNO NUMBER NOT NULL,
                        INSERT_TIME TIMESTAMP,
                        UPDATE_TIME TIMESTAMP,
                        FOREIGN KEY(DNO) REFERENCES TB_DEPT(DNO)
);

-- FAQ
CREATE TABLE TB_FAQ (
                        FNO NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                        TITLE VARCHAR2(255),
                        CONTENT VARCHAR2(255),
                        INSERT_TIME TIMESTAMP,
                        UPDATE_TIME TIMESTAMP
);

-- QNA
CREATE TABLE TB_QNA (
                        QNO NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                        QUESTIONER VARCHAR2(255 BYTE) NOT NULL,
                        QUESTION VARCHAR2(4000 BYTE) NOT NULL,
                        ANSWER VARCHAR2(4000 BYTE),
                        ANSWERER VARCHAR2(255 BYTE),
                        INSERT_TIME TIMESTAMP,
                        UPDATE_TIME TIMESTAMP
);

-- Notice
CREATE TABLE TB_NOTICE (
                           NID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                           TITLE VARCHAR2(255),
                           CONTENT VARCHAR2(255),
                           IS_VISIBLE CHAR(1) DEFAULT 'N',
                           START_DATE TIMESTAMP,
                           END_DATE TIMESTAMP,
                           INSERT_TIME TIMESTAMP,
                           UPDATE_TIME TIMESTAMP
);

-- Event Notice
CREATE TABLE TB_EVENT_NOTICE (
                                 EID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                 SUBJECT VARCHAR2(255),
                                 TEXT VARCHAR2(255),
                                 IS_VISIBLE CHAR(1) DEFAULT 'N',
                                 START_DATE TIMESTAMP,
                                 END_DATE TIMESTAMP,
                                 INSERT_TIME TIMESTAMP,
                                 UPDATE_TIME TIMESTAMP
);

-- File Upload
CREATE TABLE TB_FILE_DB (
                            UUID VARCHAR2(1000) NOT NULL PRIMARY KEY,
                            FILE_TITLE VARCHAR2(1000),
                            FILE_CONTENT VARCHAR2(1000),
                            FILE_NAME VARCHAR2(1000),
                            FILE_DATA BLOB,
                            FILE_URL VARCHAR2(1000),
                            INSERT_TIME TIMESTAMP,
                            UPDATE_TIME TIMESTAMP
);

-- Gallery
CREATE TABLE TB_GALLERY (
                            UUID VARCHAR2(1000) NOT NULL PRIMARY KEY,
                            GALLERY_TITLE VARCHAR2(1000),
                            GALLERY_FILE_NAME VARCHAR2(1000),
                            GALLERY_DATA BLOB,
                            GALLERY_FILE_URL VARCHAR2(1000),
                            INSERT_TIME TIMESTAMP,
                            UPDATE_TIME TIMESTAMP
);

-- Member
CREATE TABLE TB_MEMBER (
                           EMAIL VARCHAR2(1000) NOT NULL PRIMARY KEY,
                           PASSWORD VARCHAR2(1000),
                           NAME VARCHAR2(1000),
                           CODE_NAME VARCHAR2(1000),
                           ENO NUMBER NOT NULL,
                           INSERT_TIME TIMESTAMP,
                           UPDATE_TIME TIMESTAMP,
                           CONSTRAINT FK_EMP_ENO FOREIGN KEY (ENO)
                               REFERENCES TB_EMP(ENO)
);

-- Free Board
CREATE TABLE TB_FREE_BOARD (
                               FID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                               TITLE VARCHAR2(255),
                               CONTENT VARCHAR2(2000),
                               EMAIL VARCHAR2(255) NOT NULL,
                               VIEW_COUNT NUMBER,
                               INSERT_TIME TIMESTAMP,
                               UPDATE_TIME TIMESTAMP,
                               CONSTRAINT FK_FREE_BOARD_MEMBER FOREIGN KEY (EMAIL)
                                   REFERENCES TB_MEMBER(EMAIL)
);

-- News Board
CREATE TABLE TB_NEWS_BOARD (
                               NID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                               SUBJECT VARCHAR2(255),
                               TEXT VARCHAR2(4000),
                               EMAIL VARCHAR2(255) NOT NULL,
                               VIEW_COUNT NUMBER,
                               INSERT_TIME TIMESTAMP,
                               UPDATE_TIME TIMESTAMP,
                               CONSTRAINT FK_NEWS_BOARD_MEMBER FOREIGN KEY (EMAIL)
                                   REFERENCES TB_MEMBER(EMAIL)
);

-- File Likes
CREATE TABLE TB_FILE_DB_LIKES (
                                  ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                  EMAIL VARCHAR2(1000) NOT NULL,
                                  UUID VARCHAR2(1000) NOT NULL,
                                  LIKE_COUNT NUMBER(10) DEFAULT 0,
                                  INSERT_TIME TIMESTAMP,
                                  UPDATE_TIME TIMESTAMP,
                                  CONSTRAINT FK_MEMBER_EMAIL FOREIGN KEY (EMAIL) REFERENCES TB_MEMBER (EMAIL),
                                  CONSTRAINT FK_FILE_DB_UUID FOREIGN KEY (UUID) REFERENCES TB_FILE_DB (UUID)
);

-- Gallery Likes
CREATE TABLE TB_GALLERY_LIKES (
                                  ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                  EMAIL VARCHAR2(1000) NOT NULL,
                                  UUID VARCHAR2(1000) NOT NULL,
                                  LIKE_COUNT NUMBER(10) DEFAULT 0,
                                  INSERT_TIME TIMESTAMP,
                                  UPDATE_TIME TIMESTAMP,
                                  CONSTRAINT FK_MEMBER_EMAIL2 FOREIGN KEY (EMAIL) REFERENCES TB_MEMBER (EMAIL),
                                  CONSTRAINT FK_GALLERY_UUID FOREIGN KEY (UUID) REFERENCES TB_GALLERY (UUID)
);

CREATE TABLE TB_MEETING_ROOM (
                                 MID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,                       -- 회의실 고유 ID
                                 ROOM_NAME VARCHAR2(100),                      -- 회의실 이름
                                 LOC VARCHAR2(100),                            -- 회의실 위치
                                 CAPACITY NUMBER,                              -- 수용 인원
                                 INSERT_TIME TIMESTAMP,
                                 UPDATE_TIME TIMESTAMP
);


CREATE TABLE TB_PUBLIC_CAR (
                               PID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,                       -- 공용차 고유 ID
                               CAR_NAME VARCHAR2(255),                       -- 공용차 이름
                               FLOOR VARCHAR2(255),                          -- 주차장 위치
                               CAPACITY NUMBER,                              -- 수용 인원
                               INSERT_TIME TIMESTAMP,
                               UPDATE_TIME TIMESTAMP
);

CREATE TABLE TB_RESERVATION (
                                RID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,                        -- 예약 고유 ID
                                EMAIL VARCHAR2(255) ,                          -- 예약 아이디
                                MID NUMBER NOT NULL,                           -- 예약 회의실 ID
                                START_TIME TIMESTAMP,                          -- 예약 시작 시간
                                END_TIME TIMESTAMP,                            -- 예약 종료 시간
                                STATUS CHAR(1),                                -- 예약 상태 (R(예약) / C(취소) / E(종료))
                                INSERT_TIME TIMESTAMP,
                                UPDATE_TIME TIMESTAMP,
                                CONSTRAINT FK_RESV_EMP FOREIGN KEY (EMAIL) REFERENCES TB_MEMBER(EMAIL),
                                CONSTRAINT FK_RESV_ROOM FOREIGN KEY (MID) REFERENCES TB_MEETING_ROOM(MID)
);


CREATE TABLE TB_BOOKING (
                            BID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,                        -- 예약 고유 ID
                            EMAIL VARCHAR2(255) NOT NULL,                  -- 예약 아이디
                            PID NUMBER NOT NULL,                           -- 예약 공용차 ID
                            START_TIME TIMESTAMP,                          -- 예약 시작 시간
                            END_TIME TIMESTAMP,                            -- 예약 종료 시간
                            STATUS VARCHAR2(1),                            -- 예약 상태 (R(예약) / C(취소) / E(종료))
                            INSERT_TIME TIMESTAMP,
                            UPDATE_TIME TIMESTAMP,
                            CONSTRAINT FK_BOOKING_EMP FOREIGN KEY (EMAIL) REFERENCES TB_MEMBER(EMAIL),
                            CONSTRAINT FK_BOOKING_CAR FOREIGN KEY (PID) REFERENCES TB_PUBLIC_CAR(PID)
);

-- 전자 결재: 문서 테이블 (첨부파일 1개 포함, BLOB 저장)
CREATE TABLE TB_DOCUMENT (
                             UUID        VARCHAR2(1000) PRIMARY KEY,  -- 고유 ID
                             TITLE       VARCHAR2(200),
                             CONTENT     VARCHAR2(4000),
                             DRAFTER     NUMBER NOT NULL,       -- 기안자
                             FILE_NAME   VARCHAR2(1000),        -- 첨부파일명
                             FILE_URL    VARCHAR2(1000),        -- 첨부파일 경로 (선택)
                             FILE_DATA   BLOB,                  -- 첨부파일 내용
                             INSERT_TIME TIMESTAMP DEFAULT SYSTIMESTAMP,
                             UPDATE_TIME TIMESTAMP DEFAULT SYSTIMESTAMP,
                             CONSTRAINT FK_DOC_ENO FOREIGN KEY (DRAFTER)
                                 REFERENCES TB_EMP(ENO)
);

-- 결재 라인 테이블
-- 대기(P,PENDING)/승인(A,APPROVAL)/반려(R,REVOKE)
CREATE TABLE TB_APPROVAL (
                                  AID          NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                  UUID         VARCHAR2(1000) NOT NULL,
                                  APPROVER     NUMBER NOT NULL,  -- 결재자
                                  SEQ          NUMBER,           -- 결재 순서
                                  STATUS       VARCHAR2(1),      -- P:대기, A:승인, R:반려
                                  APPROVE_TIME TIMESTAMP,
                                  NOTE         VARCHAR2(4000),   -- 결재 메모
                                  INSERT_TIME  TIMESTAMP DEFAULT SYSTIMESTAMP,
                                  UPDATE_TIME  TIMESTAMP DEFAULT SYSTIMESTAMP,
                                  CONSTRAINT FK_LINE_DOC FOREIGN KEY (UUID)
                                      REFERENCES TB_DOCUMENT(UUID),
                                  CONSTRAINT FK_LINE_APPROVER FOREIGN KEY (APPROVER)
                                      REFERENCES TB_EMP(ENO)
);
